---
title: "Reproducible Research"
author: "Dale W. Steele, MD, MS"
date: "27 September, 2023"
format: revealjs
slide-number: true
---

## A Story - Once upon a time...

![](images\once_upon_a_time.jpg)

## A younger Siraj Amanullah, MD, MPH

![](images\young_siraj.jpg)

## The Analysis

> -   Phone call from my brilliant, sometimes frenetic friend and colleague about a project related to disparities in our care
> -   "Can you help me with a regression analysis?"
> -   Met for Lunch with two laptops, a USB stick and and large order of bread sticks
> -   Spent a few pleasant hours that evening noodling with R
> -   Later implemented using SAS by my friend

## Months later...

> -   Manuscript submitted to a high impact journal
> -   Rejected by editor!
> -   Submitted to an somewhat lower impact journal
> -   Rejected!!

## Even more months later...

> -   After 53 emails, reams of SAS output
> -   Submitted to a yet another journal

## Still later...

> -   Revise and reconsider!!!
> -   "I **think** the most recent one is laceartion.manuscript.reveision.WJEM.march2105inclyuding acuity model.docx"
> -   **"Can you just edit the methods and results section?"**
> -   **"Do you remember why we didn't include *covariate X6* in the model?"**
> -   "They want the revised manuscript next week"

## What is reproducible research?

-   Given the raw data
    -   and the **code** used to **clean and analyse the data**
    -   and the **code** used to generate **results**,\
        **figures**, and **tables**, combined with
    -   **text** describing methods and interpreting results
    -   and the software environment you used
-   Someone else (or **future you**) can reproduce your analysis

## Tools for Analysis

![](images\stats_programs_meme.jpg)

## GUI

![](images\stata_gui.png)

## Don't!!

![](images\Cut-copy-and-paste-images.jpg)

## Why Geeks Love Plain Text (and why you should too)

![](images\txt.png)

<https://www.lifehack.org/articles/technology/why-geeks-love-plain-text-and-why-you-should-too.html>

## Stata: Do-file Editor

![](images\stata_do_editor.gif)

## File Names

![](images\file_naming_conventions.png)

## File Naming Conventions

-   Use consistent file names
    -   that are machine readable **AND** human readable
    -   that play well with default ordering
    -   regular expression and globbing friendly
    -   avoid spaces, punctuation, accented characters, case sensitivity

## File Naming continued...

-   Use "-" to delimit words and "\_" to delimit sections
-   YYYY-MM-DD for dates, eg., 2019-01-19_my-data.csv
-   Left-pad numbers, i.e., 01_my-data.csv versus 1_my-data.csv

<https://speakerdeck.com/jennybc/how-to-name-files> <https://datamanagement.hms.harvard.edu/plan-design/file-naming-conventions>

## 

![](images/cluttered_desktop_meme.jpg)

## Consistent and Informative Directory Structure

![](images/directory-structure.png)

## RStudio: An Integrated Development Environment for R

![](images/rstudio.png)

## RStudio Project Directory Structure

![](images/folder-structure.png)

## The Golden Rule

-   First and foremost, *raw data should never be changed*!
-   Save it into a "data" folder and treat it as immutable

## Other Goals for a Reproducible Project

-   minimize duplication of code and data
-   self-contained
-   README file(s)

<https://ecorepsci.github.io/reproducible-science/project-organization.html#golden-rules>

## Version Control

![](images/github.jpg)

## Databases and Spreadsheets

-   Database ![](images\redcap.png)
-   Application Programming Interface (API)

``` r
ds <- redcap_read(redcap_uri=uri, token=token)$data 
```

\- Spreadsheet ![](images\google_sheets.jpg)

``` r
library(googlesheets4)
```

``` r
evmap <- read_sheet(link, sheet = "OCD_evidence_map", col_types = 'c') |>
clean_names()
```

## Spreadsheet Hell: Formatting to Convey Information

![](images\spreadsheet_errors.png)

## Spreadsheet Hell: Multiple Tables per Sheet

![](images\multiple_tables.jpg)

## Escape from Spreadsheet Hell

-   One sheet, one "data set"
-   Only one value is stored in each cell
-   There are no merged cells
-   There are no blank rows or columns used as (visual) separators

## More Escape from Spreadsheet Hell

-   Decorative formatting only used to aid navigation or is\
    temporary, it is not used to bestow meaning.
-   Only the first row should be used for headers and the header names should not contain spaces

<https://instr.iastate.libguides.com/spreadsheets/setup>

## Preparing Data - Tidy Data

-   Each variable forms a column
-   Each observation forms a row
-   Each type of observational unit forms a table ![](images\tidy-data.png) <https://r4ds.had.co.nz/tidy-data.html>

## Literate Programming

-   Markdown: a plain text format designed to be easy to write, and, even more important, easy to read
-   May contain code chunks (`R`, `python`, etc.)
-   The file containing code and text is "knitted" or "rendered" to produce output to multiple possible formats, e.g., pdf, web pages, html slides, **even** MSWord

## My 2011 Master's Thesis

![](images\emacs_ess_Rnw.png)

## Example Plot - The R "tidyverse"

```{r}
#| echo: true
#| output-location: slide
library(ggplot2)

mtcars |> 
  ggplot(aes(x = disp, y = mpg)) +
  geom_point() +
  geom_smooth(method = "loess", formula = "y~x")
```

## Flextable: Table Generation in R

```{r}
#| echo: true
#| output-location: slide
library(flextable)
ft <- flextable(airquality[ sample.int(10),]) |> 
  add_header_row(colwidths = c(4, 2), 
                 values = c("Air quality", "Time")) |>          
  theme_vanilla() |> 
  add_footer_lines("Daily air quality measurements in NYC, May to Sept 1973.") |>
  color(part = "footer", color = "#666666")

ft
```

## Disadvantages and Challenges

-   Security and confidentiality of patient information
-   Tools evolve, i.e., Sweave -\> knitr -\> quarto
-   You have to know what you are doing to make it pretty
-   Multiple options, e.g., R, python, Stata
-   Takes longer to learn and initially implement
-   Analysis pipelines are often complicated and computer intensive
-   Collaboration pain-points

## Online Resources

-   [Health Data Science in R](https://alicepaul.github.io/health-data-science-in-r/)

-   [R for Data Science (2e)](https://r4ds.hadley.nz/)

-   [Data Wrangling, exploration and analysis with R](https://stat545.com/)

-   [Modern Data Science with R](https://mdsr-book.github.io/mdsr3e/)

-   [Happy Git and HitHub for the useR](https://happygitwithr.com/)

-   [Building reproducible analytical pipelines with R](https://raps-with-r.dev/)
